name: Deploy portoflio on vps

on:
  push:
    branches: ["master"]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: false
    steps:
      - uses: actions/checkout@v3

      - name: Installing npm
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
      
      - run: npm install
      - run: npm run build

      - uses: actions/upload-artifact@v2
        with:
          name: portfolio-build
          path: build/

  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push the docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
  # docker:
  #   runs-on: ubuntu-latest

  #   needs: build

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: portfolio-build
  #     - run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_IMAGE}}:master
  #     - run: docker login -u ${{secrets.DOCKER_LOGIN}} -p ${{secrets.DOCKER_TOKEN}}
  #     - run: docker push ${{secrets.DOCKER_IMAGE}}:master

  # deploy:
  #   runs-on: ubuntu-latest

  #   needs: docker

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Deploy compose on VPS

  #       uses: appleboy/ssh-action@v0.1.10
  #       with:
  #         host: ${{secrets.VPS}}
  #         username: ${{secrets.VPS_USERNAME}}
  #         key: ${{secrets.VPS_PRIVATE_KEY}}
  #         script: |
  #           docker login -u ${{secrets.DOCKER_LOGIN}} -p ${{secrets.DOCKER_TOKEN}}
  #           docker compose -f /home/portfolio/docker-compose.yml down
  #           docker system prune -f
  #           docker compose -f /home/portfolio/docker-compose.yml pull
  #           docker compose -f /home/portfolio/docker-compose.yml up -d